// vim:ft=javascript

ARG_WITH("xdebug", "Xdebug support", "no");

if (PHP_XDEBUG != 'no') {
	var XDEBUG_BASE_SOURCES="xdebug_filter.c xdebug_monitor.c xdebug_stack.c xdebug_superglobals.c"
	var XDEBUG_LIB_SOURCES="usefulstuff.c xdebug_compat.c xdebug_hash.c xdebug_llist.c xdebug_private.c xdebug_set.c xdebug_str.c xdebug_var.c xdebug_xml.c"

	var XDEBUG_COVERAGE_SOURCES="xdebug_branch_info.c xdebug_code_coverage.c"
	var XDEBUG_DEBUGGER_SOURCES="xdebug_com.c xdebug_handler_dbgp.c xdebug_handlers.c"
	var XDEBUG_GCSTATS_SOURCES="xdebug_gc_stats.c"
	var XDEBUG_PROFILER_SOURCES="xdebug_profiler.c"
	var XDEBUG_TRACING_SOURCES="xdebug_trace_computerized.c xdebug_trace_html.c xdebug_trace_textual.c xdebug_tracing.c"
	
	var files = "xdebug.c";

	if (typeof(ZEND_EXTENSION) == 'undefined') {
		EXTENSION('xdebug', files);
	} else {
		ZEND_EXTENSION('xdebug', files);
	}
	ADD_FLAG("CFLAGS_XDEBUG", " /I " + configure_module_dirname + " ");
	ADD_SOURCES(configure_module_dirname + "/base", XDEBUG_BASE_SOURCES, "xdebug");
	ADD_SOURCES(configure_module_dirname + "/lib", XDEBUG_LIB_SOURCES, "xdebug");
	ADD_SOURCES(configure_module_dirname + "/coverage", XDEBUG_COVERAGE_SOURCES, "xdebug");
	ADD_SOURCES(configure_module_dirname + "/debugger", XDEBUG_DEBUGGER_SOURCES, "xdebug");
	ADD_SOURCES(configure_module_dirname + "/gcstats", XDEBUG_GCSTATS_SOURCES, "xdebug");
	ADD_SOURCES(configure_module_dirname + "/profiler", XDEBUG_PROFILER_SOURCES, "xdebug");
	ADD_SOURCES(configure_module_dirname + "/tracing", XDEBUG_TRACING_SOURCES, "xdebug");

	AC_DEFINE("HAVE_XDEBUG", 1, "Xdebug support");
}
